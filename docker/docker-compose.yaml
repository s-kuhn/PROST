services:
  database:
    image: postgres:latest
    container_name: prost_database
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    networks:
      - prost-vnet
    restart: unless-stopped
    healthcheck:
      test: [ 'CMD', 'pg_isready', '-U', '${POSTGRES_USER}', '-d', '${POSTGRES_DB}' ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - postgres-data:/var/lib/postgresql/data

  keycloak:
    build:
      context: .
      dockerfile: Dockerfile.keycloak
    container_name: keycloak
    command: start-dev --verbose
    environment:
      KC_BOOTSTRAP_ADMIN_USERNAME: ${KC_BOOTSTRAP_ADMIN_USERNAME}
      KC_BOOTSTRAP_ADMIN_PASSWORD: ${KC_BOOTSTRAP_ADMIN_PASSWORD}
      KC_SPI_SCRIPT_UPLOAD_ENABLED: true
      KC_DB: postgres
      KC_DB_URL_HOST: database
      KC_DB_URL_DATABASE: ${POSTGRES_DB}
      KC_DB_URL_PORT: ${POSTGRES_PORT}
      KC_DB_USERNAME: ${POSTGRES_USER}
      KC_DB_PASSWORD: ${POSTGRES_PASSWORD}
      KC_HTTP_PORT: 8081
      KEYCLOAK_IMPORT: /opt/keycloak/imports/prost-realm-export.json
    volumes:
      - ./keycloak/realm:/opt/keycloak/data/import
    depends_on:
      - database
    ports:
      - "8081:8081"
    networks:
      - prost-vnet
    restart: unless-stopped

  mailhog:
    image: mailhog/mailhog
    container_name: mailhog
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - prost-vnet
    restart: unless-stopped

networks:
  prost-vnet:
    driver: bridge

volumes:
  postgres-data:
    driver: local
    driver_opts:
      type: none
      device: ./data/db
      o: bind

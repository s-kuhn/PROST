spring:
  application:
    name: prost

  config:
    import: optional:file:.env[.properties]

  datasource:
    url: jdbc:postgresql://${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}

  security:
    oauth2:
      client: # Only till dedicated frontend
        registration:
          keycloak:
            client-id: ${KEYCLOAK_CLIENT_ID}
            client-secret: ${KEYCLOAK_CLIENT_SECRET}
            scope: openid, profile, roles
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/${KEYCLOAK_CLIENT_ID}"
        provider:
          keycloak:
            issuer-uri: http://${KEYCLOAK_HOSTNAME}:8081/realms/prost
      resourceserver:
        jwt:
          issuer-uri: http://${KEYCLOAK_HOSTNAME}:8081/realms/prost
          jwk-set-uri: http://${KEYCLOAK_HOSTNAME}:8081/realms/prost/protocol/openid-connect/certs

  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true

jwt:
  auth:
    converter:
      principle_attribute: preferred_username
      resource_id: ${KEYCLOAK_CLIENT_ID}

logging:
  level:
    de.skuhn.prost: DEBUG